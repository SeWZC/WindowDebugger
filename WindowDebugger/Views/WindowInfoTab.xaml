<TabItem x:Class="WindowDebugger.Views.WindowInfoTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WindowDebugger.Views"
             xmlns:win32Enums="clr-namespace:Lsj.Util.Win32.Enums;assembly=Lsj.Util.Win32"
             xmlns:converters="clr-namespace:WindowDebugger.Converters"
             xmlns:utilconverters="clr-namespace:Lsj.Util.WPF.Converters;assembly=Lsj.Util.WPF"
             xmlns:markupExtensions="clr-namespace:Lsj.Util.WPF.MarkupExtensions;assembly=Lsj.Util.WPF"
             xmlns:viewmodels="clr-namespace:WindowDebugger.ViewModels"
         mc:Ignorable="d"
         d:DesignHeight="500" d:DesignWidth="500" d:DataContext="{d:DesignInstance Type=viewmodels:WindowItem}" Header="{Binding Content, RelativeSource={RelativeSource Self}, Mode=OneWay}">
    <Border Padding="10">
        <Grid>
            <Grid.Resources>
                <utilconverters:IntPtrToHexConverter x:Key="IntPtrToHexConverter"/>
                <Style TargetType="TextBlock">
                    <Style.Setters>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style.Setters>
                </Style>
                <Style TargetType="TextBox">
                    <Style.Setters>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Height" Value="20"/>
                    </Style.Setters>
                </Style>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Style.Setters>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Height" Value="20"/>
                        <Setter Property="Margin" Value="10,0,0,0"/>
                        <Setter Property="Padding" Value="8 0" />
                    </Style.Setters>
                </Style>
                <Style TargetType="ComboBox">
                    <Style.Setters>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Height" Value="22"/>
                    </Style.Setters>
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" MaxWidth="150"/>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" MaxHeight="40"/>
                <RowDefinition Height="*" MaxHeight="40"/>
                <RowDefinition Height="*" MaxHeight="40"/>
                <RowDefinition Height="*" MaxHeight="40"/>
                <RowDefinition Height="2*" MaxHeight="70"/>
                <RowDefinition Height="*" MaxHeight="40"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="0" Text="Window Handle"/>
            <TextBox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding WindowHandle, Converter={StaticResource IntPtrToHexConverter}, Mode=OneWay}" IsReadOnly="True"/>
            <TextBlock Grid.Row="1" Grid.Column="0" Text="Text"/>
            <TextBox Grid.Row="1" Grid.Column="1" x:Name="TextBoxText" Text="{Binding Text, UpdateSourceTrigger=Explicit}"/>
            <Button Grid.Row="1" Grid.Column="2" Click="UpdateText" Content="Update"/>
            <TextBlock Grid.Row="2" Grid.Column="0" Text="Process"/>
            <TextBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" IsReadOnly="True">
                <MultiBinding StringFormat="{}{0} ({1})" Mode="OneWay">
                    <Binding Path="ProcessID" />
                    <Binding Path="ProcessName" />
                </MultiBinding>
            </TextBox>
            <TextBlock Grid.Row="3" Grid.Column="0" Text="Class Name"/>
            <TextBox Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding ClassName, Mode=OneWay}" IsReadOnly="True"/>
            <TextBlock Grid.Row="4" Grid.Column="0" Text="Rect"/>
            <Grid Grid.Row="4" Grid.Column="1" x:Name="GridRect">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Text="Left" HorizontalAlignment="Center"/>
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Left, Mode=TwoWay}"/>
                <TextBlock Grid.Row="0" Grid.Column="2" Text="Top" HorizontalAlignment="Center"/>
                <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding Top, Mode=TwoWay}"/>
                <TextBlock Grid.Row="1" Grid.Column="0" Text="Width" HorizontalAlignment="Center"/>
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Width, Mode=TwoWay}"/>
                <TextBlock Grid.Row="1" Grid.Column="2" Text="Height" HorizontalAlignment="Center"/>
                <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding Height, Mode=TwoWay}"/>
            </Grid>
            <Button Grid.Row="4" Grid.Column="2" Click="UpdateRect" Content="Update"/>
            <TextBlock Grid.Row="5" Grid.Column="0" Text="WindowShowStates"/>
            <ComboBox Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2" x:Name="ComboBoxWindowShowStates"
                      SelectedValue="{Binding WindowShowStates, Mode=TwoWay}"
                      ItemsSource="{markupExtensions:EnumToItemSource {x:Type win32Enums:ShowWindowCommands}}"
                      DisplayMemberPath="DisplayName" SelectedValuePath="Value"/>
            <Image Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center"
                   Source="{Binding Screenshot}"/>
        </Grid>
    </Border>
</TabItem>
